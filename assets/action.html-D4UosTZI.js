import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as t,o as e}from"./app-DrX2Z_hR.js";const p={};function c(o,n){return e(),a("div",null,n[0]||(n[0]=[t(`<div class="hint-container warning"><p class="hint-container-title">注意</p><p>编写此文档时，<code>GoneBot</code> 版本为 <code>v1.1.4</code></p></div><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>对于适配器，它们可能会定义专属于某个平台的行为（如 QQ 戳一戳、合并转发等），这些行为不能用消息类型表示，但它们存在而且可能非常有用，因此，<code>GoneBot</code> 也创建了对应的接口，响应器可以通过这些接口，尝试让适配器执行它定义的行为。</p><p>适配器行为的接口定义如下：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// If you want to call adapter action, you should use this struct</span></span>
<span class="line"><span class="token keyword">type</span> ActionCall <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">// Which action</span></span>
<span class="line">	Action any</span>
<span class="line">	<span class="token comment">// Which channel to push the result, will initialize automatically</span></span>
<span class="line">	ResultChannel <span class="token operator">*</span><span class="token keyword">chan</span> any</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于适配器，我们提供了 <code>CallAction</code> 方法，用于调用适配器行为：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>a <span class="token operator">*</span>Adapter<span class="token punctuation">)</span> <span class="token function">CallAction</span><span class="token punctuation">(</span>action any<span class="token punctuation">)</span> <span class="token punctuation">(</span>result any<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	act <span class="token operator">:=</span> message<span class="token punctuation">.</span>ActionCall<span class="token punctuation">{</span>Action<span class="token punctuation">:</span> action<span class="token punctuation">}</span></span>
<span class="line">	resultChannel <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> any<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">	act<span class="token punctuation">.</span>ResultChannel <span class="token operator">=</span> <span class="token operator">&amp;</span>resultChannel</span>
<span class="line">	a<span class="token punctuation">.</span>ActionChannel<span class="token punctuation">.</span><span class="token function">Push</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>act<span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">return</span> <span class="token operator">&lt;-</span>resultChannel</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果适配器没有返回结果到 <code>resultChannel</code>，<code>CallAction</code> 会卡死并阻塞当前响应器，如果你发现这种情况，请检查你调用的 <code>Action</code> 是否正确。</p><p>而如果发现实际上是适配器的问题，Man! What can I say.</p></div><h2 id="适配器行为调用" tabindex="-1"><a class="header-anchor" href="#适配器行为调用"><span>适配器行为调用</span></a></h2><p>在适配器已经实现了对应行为的情况下，你可以使用 <code>CallAction</code> 方法调用它。</p><p>例如，在 OneBotV11 适配器中，你可以在用户向机器人发送含 <code>test</code> 的文本时调用 <code>CallAction</code> 方法来发送私发消息：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> ActionTrial plugin<span class="token punctuation">.</span>GonePlugin</span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  ActionTrial<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;Action Trial&quot;</span></span>
<span class="line">  ActionTrial<span class="token punctuation">.</span>Version <span class="token operator">=</span> <span class="token string">&quot;v0.0.1&quot;</span></span>
<span class="line">  ActionTrial<span class="token punctuation">.</span>Description <span class="token operator">=</span> <span class="token string">&quot;A plugin for testing actions&quot;</span></span>
<span class="line"></span>
<span class="line">  ActionTrial<span class="token punctuation">.</span>Handlers <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>ActionTrial<span class="token punctuation">.</span>Handlers<span class="token punctuation">,</span> plugin<span class="token punctuation">.</span>GoneHandler<span class="token punctuation">{</span></span>
<span class="line">    Rules<span class="token punctuation">:</span> rule<span class="token punctuation">.</span><span class="token function">NewRules</span><span class="token punctuation">(</span>rule<span class="token punctuation">.</span><span class="token function">ToMe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">And</span><span class="token punctuation">(</span>rule<span class="token punctuation">.</span><span class="token function">Keyword</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    Handler<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>a <span class="token operator">*</span>adapter<span class="token punctuation">.</span>Adapter<span class="token punctuation">,</span> msg message<span class="token punctuation">.</span>Message<span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span></span>
<span class="line">      a<span class="token punctuation">.</span><span class="token function">CallAction</span><span class="token punctuation">(</span>onebotv11<span class="token punctuation">.</span>SendPrivateMessage<span class="token punctuation">{</span></span>
<span class="line">        UserID<span class="token punctuation">:</span>  <span class="token number">114514</span><span class="token punctuation">,</span></span>
<span class="line">        Message<span class="token punctuation">:</span> message<span class="token punctuation">.</span><span class="token function">NewReply</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&quot;Hello!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetSegments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token boolean">true</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12)]))}const u=s(p,[["render",c],["__file","action.html.vue"]]),r=JSON.parse('{"path":"/zh/guide/plugin/action.html","title":"适配器行为","lang":"zh-CN","frontmatter":{"title":"适配器行为","icon":"person-running","order":4,"category":["文档"],"tag":["插件","适配器行为"],"author":"Kingcq"},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"适配器行为调用","slug":"适配器行为调用","link":"#适配器行为调用","children":[]}],"git":{"createdTime":1733397969000,"updatedTime":1733397969000,"contributors":[{"name":"Kingcq","email":"404291187@qq.com","commits":1}]},"readingTime":{"minutes":1.38,"words":415},"filePathRelative":"zh/guide/plugin/action.md","localizedDate":"2024年12月5日","excerpt":"<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<p>编写此文档时，<code>GoneBot</code> 版本为 <code>v1.1.4</code></p>\\n</div>\\n<h2>简介</h2>\\n<p>对于适配器，它们可能会定义专属于某个平台的行为（如 QQ 戳一戳、合并转发等），这些行为不能用消息类型表示，但它们存在而且可能非常有用，因此，<code>GoneBot</code> 也创建了对应的接口，响应器可以通过这些接口，尝试让适配器执行它定义的行为。</p>\\n<p>适配器行为的接口定义如下：</p>"}');export{u as comp,r as data};
