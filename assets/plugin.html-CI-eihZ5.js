import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as e,o as t}from"./app-D2fNj2_6.js";const p={};function o(i,n){return t(),a("div",null,n[0]||(n[0]=[e(`<div class="hint-container warning"><p class="hint-container-title">Warning</p><p>When writing this document, the <code>GoneBot</code> version was <code>v1.1.4</code></p></div><p>Here, we take the <a href="https://github.com/goneplugin-echo" target="_blank" rel="noopener noreferrer">Echo</a> plugin as an example:</p><p>The main body of the plugin is a <code>plugin.GonePlugin</code> type, you can define it globally using <code>CamelCase</code> and determine the specific content of its fields in the <code>init()</code> method:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> echo</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line highlighted">	<span class="token string">&quot;github.com/gonebot-dev/gonebot/plugin&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line highlighted"><span class="token keyword">var</span> Echo plugin<span class="token punctuation">.</span>GonePlugin</span>
<span class="line highlighted"></span>
<span class="line highlighted"><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">  Echo<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;Echo&quot;</span></span>
<span class="line highlighted">  Echo<span class="token punctuation">.</span>Version <span class="token operator">=</span> <span class="token string">&quot;v0.1.1&quot;</span></span>
<span class="line highlighted">  Echo<span class="token punctuation">.</span>Description <span class="token operator">=</span> <span class="token string">&quot;Computer speaks&quot;</span></span>
<span class="line highlighted"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Next, we need to define the <code>Handlers</code> field of the plugin, which is a <code>[]plugin.GoneHandler</code> type, containing one or more <code>plugin.GoneHandler</code> type elements:</p><p><code>Echo</code> plugin only needs one <code>plugin.GoneHandler</code>, in <code>plugin.GoneHandler</code>, we need to define the <code>Rule</code> and <code>Handler</code> fields of the handler, respectively representing the message screening rules and response functions of the handler:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> echo</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line highlighted">	<span class="token string">&quot;github.com/gonebot-dev/gonebot/adapter&quot;</span></span>
<span class="line highlighted">	<span class="token string">&quot;github.com/gonebot-dev/gonebot/message&quot;</span></span>
<span class="line">	<span class="token string">&quot;github.com/gonebot-dev/gonebot/plugin&quot;</span></span>
<span class="line highlighted">	<span class="token string">&quot;github.com/gonebot-dev/gonebot/plugin/rule&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> Echo plugin<span class="token punctuation">.</span>GonePlugin</span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	Echo<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;Echo&quot;</span></span>
<span class="line">	Echo<span class="token punctuation">.</span>Version <span class="token operator">=</span> <span class="token string">&quot;v0.1.1&quot;</span></span>
<span class="line">	Echo<span class="token punctuation">.</span>Description <span class="token operator">=</span> <span class="token string">&quot;Reply the same message of what you have sent&quot;</span></span>
<span class="line"></span>
<span class="line highlighted">	Echo<span class="token punctuation">.</span>Handlers <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>Echo<span class="token punctuation">.</span>Handlers<span class="token punctuation">,</span> plugin<span class="token punctuation">.</span>GoneHandler<span class="token punctuation">{</span></span>
<span class="line highlighted">		Rules<span class="token punctuation">:</span> rule<span class="token punctuation">.</span><span class="token function">NewRules</span><span class="token punctuation">(</span>rule<span class="token punctuation">.</span><span class="token function">ToMe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">And</span><span class="token punctuation">(</span>rule<span class="token punctuation">.</span><span class="token function">Command</span><span class="token punctuation">(</span><span class="token string">&quot;echo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line highlighted">		Handler<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>a <span class="token operator">*</span>adapter<span class="token punctuation">.</span>Adapter<span class="token punctuation">,</span> msg message<span class="token punctuation">.</span>Message<span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">			reply <span class="token operator">:=</span> message<span class="token punctuation">.</span><span class="token function">NewReply</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span></span>
<span class="line highlighted">			a<span class="token punctuation">.</span><span class="token function">SendMessage</span><span class="token punctuation">(</span>reply<span class="token punctuation">)</span></span>
<span class="line highlighted">			<span class="token keyword">return</span> <span class="token boolean">true</span></span>
<span class="line highlighted">		<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line highlighted">	<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Firstly, let&#39;s take a look at the <code>Rules</code> field:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">Rules<span class="token punctuation">:</span> rule<span class="token punctuation">.</span><span class="token function">NewRules</span><span class="token punctuation">(</span>rule<span class="token punctuation">.</span><span class="token function">ToMe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">And</span><span class="token punctuation">(</span>rule<span class="token punctuation">.</span><span class="token function">Command</span><span class="token punctuation">(</span><span class="token string">&quot;echo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The <code>Rules</code> field can be composed of several rules, and each rule can specify a logical relationship between them. The message received will be passed to the handler only if it meets the rules in <code>Rules</code>.</p><p>The specific introduction of <code>Rules</code> field is given in <a href="/zh/guide/plugin/rule">Handler Rules</a>.</p><p>Next is the <code>Handler</code> field:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">Handler<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>a <span class="token operator">*</span>adapter<span class="token punctuation">.</span>Adapter<span class="token punctuation">,</span> msg message<span class="token punctuation">.</span>Message<span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span></span>
<span class="line">  reply <span class="token operator">:=</span> message<span class="token punctuation">.</span><span class="token function">NewReply</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span></span>
<span class="line">  a<span class="token punctuation">.</span><span class="token function">SendMessage</span><span class="token punctuation">(</span>reply<span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token boolean">true</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>Handler</code> field is a <code>func(a *adapter.Adapter, msg message.Message) bool</code> that receives two parameters: <code>the adapter that received the current message</code> and <code>the content of the current received message</code>, and it returns a <code>bool</code> value, indicating whether the message is passed to the next handler after the handler has processed the message.</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>The response order of the handler is related to the <code>loading order of the plugin</code> and the <code>writing order of plugin.GoneHandler in the plugin</code>, the earlier the order, the earlier the response.</p></div><p>You can use <code>message.NewReply()</code> quickly to create an empty response, in Echo, the plugin needs to return the content of the original message completely, you can use <code>Join()</code> to merge the content of the message into the response.</p><p>After that, you can call <code>a.SendMessage</code> to pass the response to the adapter for processing.</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p><strong>handlers can do more than that!</strong> Go to <a href="/zh/guide/plugin/message">Message Types</a> and <a href="/zh/guide/plugin/action">Adapter Actions</a> to learn more!</p></div><p>Now, you should have completed the writing of your first plugin, congratulations! Next, you can go to learn more about <a href="/zh/guide/plugin/rule">Handler Rules</a>, <a href="/zh/guide/plugin/message">Message Types</a> and <a href="/zh/guide/plugin/action">Adapter Actions</a> in detail!</p>`,19)]))}const u=s(p,[["render",o],["__file","plugin.html.vue"]]),d=JSON.parse('{"path":"/guide/plugin/plugin.html","title":"Your First Plugin","lang":"en-US","frontmatter":{"title":"Your First Plugin","icon":"plug-circle-check","order":1,"category":["Documentation"],"tag":["Plugin"],"author":"Kingcq"},"headers":[],"git":{"createdTime":1733397969000,"updatedTime":1733397969000,"contributors":[{"name":"Kingcq","email":"404291187@qq.com","commits":1}]},"readingTime":{"minutes":1.61,"words":484},"filePathRelative":"guide/plugin/plugin.md","localizedDate":"December 5, 2024","excerpt":"<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">Warning</p>\\n<p>When writing this document, the <code>GoneBot</code> version was <code>v1.1.4</code></p>\\n</div>\\n<p>Here, we take the <a href=\\"https://github.com/goneplugin-echo\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Echo</a> plugin as an example:</p>"}');export{u as comp,d as data};
