import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as e,o as t}from"./app-PKT945-J.js";const p={};function i(l,n){return t(),a("div",null,n[0]||(n[0]=[e(`<div class="hint-container warning"><p class="hint-container-title">Warning</p><p>When writing this document, the <code>GoneBot</code> version was <code>v1.1.4</code></p></div><p>In this chapter, some commonly used methods in adapters are summarized.</p><p><s>They are really so few!</s></p><h2 id="adapter-receivechannel-push-msg-true" tabindex="-1"><a class="header-anchor" href="#adapter-receivechannel-push-msg-true"><span><code>adapter.ReceiveChannel.Push(msg, true)</code></span></a></h2><p>It will receive a message from the <code>ReceiveChannel</code> and normalize it, and then call <code>adapter.SendChannel.Push(msg, true)</code> to push it to the <code>SendChannel</code>.</p><h2 id="adapter-sendchannel-pull-adapter-actionchannel-pull" tabindex="-1"><a class="header-anchor" href="#adapter-sendchannel-pull-adapter-actionchannel-pull"><span><code>adapter.SendChannel.Pull()</code>, <code>adapter.ActionChannel.Pull()</code></span></a></h2><p>They will pull a message or action from the <code>SendChannel</code> or <code>ActionChannel</code> respectively, normalize it, and then return it. They will not return until a message or action is received.</p><p><s>Oh shoot, that&#39;s all of it?</s></p><p>By the way, for message types and event types, you need to implement the corresponding <code>MessageType</code> method to facilitate <code>GoneBot</code> processing:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// This describes a simple part of a message</span></span>
<span class="line"><span class="token keyword">type</span> MessageSegment <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">// Message type</span></span>
<span class="line">	Type <span class="token builtin">string</span> <span class="token string">\`json:&quot;type&quot;\`</span></span>
<span class="line">	<span class="token comment">// Make sure it implements MessageType interface</span></span>
<span class="line">	Data MessageType <span class="token string">\`json:&quot;data&quot;\`</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Implement this to create a message type</span></span>
<span class="line"><span class="token keyword">type</span> MessageType <span class="token keyword">interface</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">// Which adapter is this message for</span></span>
<span class="line">	<span class="token function">AdapterName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span></span>
<span class="line">	<span class="token comment">// Which message type is this message for</span></span>
<span class="line">	<span class="token function">TypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span></span>
<span class="line">	<span class="token comment">// Convert this message segment to raw text</span></span>
<span class="line">	<span class="token function">ToRawText</span><span class="token punctuation">(</span>msg MessageSegment<span class="token punctuation">)</span> <span class="token builtin">string</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>For example, the text message type of <code>GoneBot</code> is implemented like this:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">type</span> TextType <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">	Text <span class="token builtin">string</span> <span class="token string">\`json:&quot;text&quot;\`</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>serializer TextType<span class="token punctuation">)</span> <span class="token function">AdapterName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>serializer TextType<span class="token punctuation">)</span> <span class="token function">TypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">return</span> <span class="token string">&quot;text&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>serializer TextType<span class="token punctuation">)</span> <span class="token function">ToRawText</span><span class="token punctuation">(</span>msg MessageSegment<span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">return</span> msg<span class="token punctuation">.</span>Data<span class="token punctuation">.</span><span class="token punctuation">(</span>TextType<span class="token punctuation">)</span><span class="token punctuation">.</span>Text</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12)]))}const d=s(p,[["render",i],["__file","methods.html.vue"]]),r=JSON.parse('{"path":"/guide/adapter/methods.html","title":"Common Methods","lang":"en-US","frontmatter":{"title":"Common Methods","icon":"meteor","order":3,"category":["Documentation"],"tag":["Adapter","Methods"],"author":"Kingcq"},"headers":[{"level":2,"title":"adapter.ReceiveChannel.Push(msg, true)","slug":"adapter-receivechannel-push-msg-true","link":"#adapter-receivechannel-push-msg-true","children":[]},{"level":2,"title":"adapter.SendChannel.Pull(), adapter.ActionChannel.Pull()","slug":"adapter-sendchannel-pull-adapter-actionchannel-pull","link":"#adapter-sendchannel-pull-adapter-actionchannel-pull","children":[]}],"git":{"createdTime":1733397969000,"updatedTime":1733824016000,"contributors":[{"name":"Kingcq","email":"404291187@qq.com","commits":2}]},"readingTime":{"minutes":0.81,"words":244},"filePathRelative":"guide/adapter/methods.md","localizedDate":"December 5, 2024","excerpt":"<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">Warning</p>\\n<p>When writing this document, the <code>GoneBot</code> version was <code>v1.1.4</code></p>\\n</div>\\n<p>In this chapter, some commonly used methods in adapters are summarized.</p>\\n<p><s>They are really so few!</s></p>\\n<h2><code>adapter.ReceiveChannel.Push(msg, true)</code></h2>"}');export{d as comp,r as data};
